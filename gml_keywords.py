from tokens import *

gml_keywords = {
	'begin': lambda _: LBraceToken(True),
	  'end': lambda _: RBraceToken(True),
	  'and': lambda _: AndToken(True),
	   'or': lambda _: OrToken(True),
	  'xor': lambda _: XorToken(True),
	  'not': lambda _: LogicNotToken(True),
	  'mod': lambda _: IntModToken(),
	  'div': lambda _: IntDivToken(),
	  'new': lambda _: NewObjectToken(),

	'if': None,
	'then': None,
	'else': None,
	'while': None,
	'do': None,
	'for': None,
	'break': None,
	'continue': None,
	'with': None,
	'until': None,
	'repeat': None,
	'exit': None,
	'return': None,
	'switch': None,
	'case': None,
	'default': None,
	'var': None,
	'globalvar': None,
	'enum': None,
	'function': None,
	'try': None,
	'catch': None,
	'finally': None,
	'throw': None,
	'static': None,
	'delete': None,
	'constructor': None,

	# Not technically keywords but mightaswell here anyway
	     'true': lambda _: BoolLiteralToken(True),
	    'false': lambda _: BoolLiteralToken(False),
	     'self': lambda _: ScopeToken(ScopeKind.SELF),
	    'other': lambda _: ScopeToken(ScopeKind.OTHER),
	      'all': lambda _: ScopeToken(ScopeKind.ALL),
	    'noone': lambda _: ScopeToken(ScopeKind.NOONE),
	   'global': lambda _: GlobalToken(),
	'undefined': lambda _: UndefinedToken(),
}
